@model TourismManagement.Models.ViewModels.PackageListViewModel
@using System.Linq
@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var initialPackage = Model.Packages.FirstOrDefault();
    var initialImageUrl = initialPackage?.ImagePaths?.FirstOrDefault() ?? "/images/default_hero.jpg";
}

<style>
    /* Global scroll behavior for smooth scrolling between sections */
    html {
        scroll-behavior: smooth;
    }

    /* Main container for the hero section */
    .hero-container {
        display: flex;
        position: relative;
        width: 100%;
        height: calc(100vh - 100px); /* Adjust height to fill space below the navbar */
        background-size: cover;
        background-position: center;
        transition: background-image 0.5s ease-in-out;
        color: white;
        overflow: hidden;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to right, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0) 100%);
        z-index: 1;
    }

    /* Left section for main content (title, description) */
    .main-content {
        flex: 0 0 55%; /* Occupy left 55% */
        padding: 6rem;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        position: relative;
        z-index: 2;
    }

        .main-content h1 {
            font-size: 5rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
        }

        .main-content p {
            font-size: 1.2rem;
            max-width: 500px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
        }

        .main-content .explore-btn {
            margin-top: 2rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.5);
            border-radius: 5px;
            padding: 10px 30px;
            transition: background 0.3s ease, border-color 0.3s ease;
            text-decoration: none;
        }

            .main-content .explore-btn:hover {
                background: rgba(255, 255, 255, 0.4);
                border-color: white;
            }

    /* Right section for package carousel */
    .package-carousel {
        flex: 1;
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 2;
        padding: 2rem;
        background-color: rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        border-left: 1px solid rgba(255, 255, 255, 0.1);
    }

    /* Horizontal gallery of package cards with scroll-snap */
    .carousel-gallery {
        display: flex;
        gap: 1.5rem;
        overflow-x: scroll;
        padding: 1rem;
        width: 100%;
        box-sizing: border-box;
        scroll-snap-type: x mandatory;
        -webkit-overflow-scrolling: touch;
    }

    /* Individual package cards */
    .package-card {
        flex: 0 0 280px;
        height: 400px;
        background-size: cover;
        background-position: center;
        border-radius: 15px;
        position: relative;
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        border: 2px solid transparent;
        scroll-snap-align: center;
    }

        .package-card:hover, .package-card.active {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(0,0,0,0.3);
            border-color: #fff;
        }

    .card-content {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        padding: 1rem;
        background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 100%);
    }

        .card-content h5 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: bold;
        }

        .card-content p {
            margin: 0;
            font-size: 1rem;
            color: #ddd;
        }

    /* Styles for the new full-screen sections */
    .about-contact-section {
        padding: 6rem 0;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }


    /* --- NEW STYLES FOR REDESIGNED ABOUT US SECTION --- */

    .about-us-section {
        background-color: #ffffff; /* White background as requested */
        color: #333;
    }

    .about-us-header {
        text-align: left; /* Aligned left with text */
        margin-bottom: 2rem;
    }

        .about-us-header h2 {
            font-size: 3rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .about-us-header p {
            font-size: 1.1rem;
            color: #666;
            line-height: 1.6;
        }

    .about-cards-container {
        position: relative;
        display: flex;
        justify-content: center; /* Center the cards within their column */
        align-items: center;
        min-height: 480px; /* Provide space for the cards */
        width: 100%;
    }

    .about-card {
        position: absolute;
        width: 320px;
        height: 420px;
        background-size: cover;
        background-position: center;
        border-radius: 20px;
        color: white;
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        box-shadow: 0 20px 50px rgba(0,0,0,0.3);
        overflow: hidden; /* Hide overflowing pseudo-element */
        transform: rotate(-15deg); /* Base tilt for all cards */
    }

        /* Gradient Border Effect */
        .about-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(0deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0) 50%);
            z-index: 1;
        }

        .about-card::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: calc(100% + 4px);
            height: calc(100% + 4px);
            /* background: conic-gradient(from 180deg at 50% 50%, #FFC107 0%, #F44336 25%, #9C27B0 50%, #03A9F4 75%, #4CAF50 100%); */
            border-radius: 22px;
            z-index: -1;
        }

    .about-card-content {
        position: relative;
        z-index: 2;
    }

        .about-card-content h5 {
            font-size: 1.8rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .about-card-content p {
            font-size: 1rem;
            line-height: 1.5;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
        }

    /* Specific positioning and styling for each static card */
    .card-main {
        background-image: url('https://images.pexels.com/photos/1271619/pexels-photo-1271619.jpeg?cs=srgb&dl=pexels-andreimike-1271619.jpg&fm=jpg'); /* Clear image for top card */
        z-index: 3; /* Ensure it's on top */
        transform: rotate(-15deg); /* Stays tilted */
    }

    .card-blurred-1 {
        background-image: url('https://images.pexels.com/photos/1271619/pexels-photo-1271619.jpeg?cs=srgb&dl=pexels-andreimike-1271619.jpg&fm=jpg');
        filter: blur(5px) brightness(0.7); /* Blur and darken */
        opacity: 0.6; /* Transparent */
        z-index: 2;
        top: 40px; /* Adjust overlap */
        left: 20px;
        transform: rotate(-10deg); /* Slightly less tilted */
    }

    .card-blurred-2 {
        background-image: url('https://images.pexels.com/photos/1271619/pexels-photo-1271619.jpeg?cs=srgb&dl=pexels-andreimike-1271619.jpg&fm=jpg');
        filter: blur(10px) brightness(0.5); /* More blur and darken */
        opacity: 0.3; /* More transparent */
        z-index: 1;
        top: 80px; /* Adjust overlap */
        left: -20px;
        transform: rotate(-20deg); /* More tilted */
    }
</style>

<div class="hero-container" id="heroContainer" style="background-image: url('@Url.Content(initialImageUrl)')">
    <div class="hero-overlay"></div>
    <div class="main-content">
        <h1>@Model.Packages.FirstOrDefault()?.Title ?? "Discover Travel"</h1>
        <p>@Model.Packages.FirstOrDefault()?.Description ?? "As the largest archipelagic country in the world, Indonesia is blessed with so many different people, cultures, customs, traditions, arts and crafts, languages, and religions, and everything that makes a distinct one country unified."</p>
        <a href="/Booking/BookNow?packageId=@(initialPackage?.Id)" class="explore-btn text-decoration-none">Book Now →</a>
    </div>

    <div class="package-carousel" id="packageCarousel">
        <div class="carousel-gallery">
            @foreach (var package in Model.Packages)
            {
                <div class="package-card"
                     data-id="@package.Id"
                     data-title="@package.Title"
                     data-description="@package.Description"
                     data-image="@(package.ImagePaths?.FirstOrDefault() ?? "/images/no-image-available.png")"
                     style="background-image: url('@Url.Content(package.ImagePaths?.FirstOrDefault() ?? "/images/no-image-available.png")')">
                    <div class="card-content">
                        <h5>@package.Title</h5>
                        <p>@package.Destination</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="about-us-section" class="about-contact-section about-us-section">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6 fade-in-up">
                <div class="about-us-header">
                    <h2>About Tourister</h2>
                    <p>
                        Tourister is a platform dedicated to making your travel dreams come true. We provide hand-picked tour packages to the world's most breathtaking destinations. Our mission is to offer seamless booking experiences and unforgettable adventures.
                    </p>
                    <p>
                        Whether you're looking for a relaxing beach vacation, an adventurous mountain trek, or a cultural exploration, our curated packages are designed to cater to every kind of traveler. We believe that travel is not just about visiting new places, but about creating lasting memories.
                    </p>
                </div>
            </div>
            <div class="col-lg-6 fade-in-up">
                <div class="about-cards-container">
                    <div class="about-card card-blurred-2">
                        <div class="about-card-content">
                            <h5>Discover New Horizons</h5>
                            <p>Explore places you've only dreamed of. Adventure awaits!</p>
                        </div>
                    </div>
                    <div class="about-card card-blurred-1">
                        <div class="about-card-content">
                            <h5>Experience the World</h5>
                            <p>From serene beaches to vibrant cities, find your perfect escape.</p>
                        </div>
                    </div>
                    <div class="about-card card-main">
                        <div class="about-card-content">
                            <h5>Your Journey Starts Here</h5>
                            <p>Seamless booking, unforgettable adventures. Let's make memories.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            const $heroContainer = $('#heroContainer');
            const $mainTitle = $('.main-content h1');
            const $mainDescription = $('.main-content p');
            const $exploreBtn = $('.main-content .explore-btn');
            const $carouselGallery = $('.carousel-gallery');

            let initialCards = $('.package-card');
            if (initialCards.length === 0) return;

            const totalPackages = initialCards.length;
            const scrollSpeed = 2000;
            let currentPackageIndex = 0;
            let autoScrollInterval;

            const packagesContent = $carouselGallery.html();
            $carouselGallery.append(packagesContent);

            let $cards = $('.package-card');

            function updateMainContent(card) {
                const $card = $(card);
                const image = $card.data('image');
                const title = $card.data('title');
                const description = $card.data('description');
                const id = $card.data('id');

                $heroContainer.css('background-image', 'url("' + image + '")');
                $mainTitle.text(title);
                $mainDescription.text(description);
                $exploreBtn.attr('href', '/Booking/BookNow?packageId=' + id);

                $cards.removeClass('active');
                $(`.package-card[data-id='${id}']`).addClass('active');
            }

            function scrollToNextPackage() {
                currentPackageIndex++;
                const scrollPosition = $cards[currentPackageIndex].offsetLeft;

                $carouselGallery.animate({
                    scrollLeft: scrollPosition
                }, 600, 'swing', function () {
                    if (currentPackageIndex >= totalPackages) {
                        currentPackageIndex = 0;
                        $carouselGallery.scrollLeft(0);
                    }
                    updateMainContent($cards.eq(currentPackageIndex));
                });
            }

            function startAutoScroll() {
                stopAutoScroll();
                autoScrollInterval = setInterval(scrollToNextPackage, scrollSpeed);
            }

            function stopAutoScroll() {
                clearInterval(autoScrollInterval);
            }

            updateMainContent($cards.eq(0));
            startAutoScroll();

            $carouselGallery.on('mouseenter', stopAutoScroll).on('mouseleave', startAutoScroll);

            $cards.on('click', function () {
                stopAutoScroll();
                const clickedCard = $(this);
                currentPackageIndex = clickedCard.index() % totalPackages;

                const scrollPosition = $cards[currentPackageIndex].offsetLeft;

                $carouselGallery.animate({
                    scrollLeft: scrollPosition
                }, 500, 'swing');

                updateMainContent(clickedCard);
            });

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.3 });

            document.querySelectorAll('.slide-in-up, .fade-in').forEach(element => {
                observer.observe(element);
            });
        });
    </script>
}