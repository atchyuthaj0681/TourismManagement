@model TourismManagement.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #f0f2f5;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .dashboard-content-wrapper {
        display: flex;
        flex-direction: column;
        gap: 2rem;
        background-color: #2c2f33;
        color: #fff;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .dashboard-header-with-button {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .dashboard-header h2 {
        margin-bottom: 0.5rem;
        color: #ffc107;
    }

    .dashboard-header h2, .dashboard-header p {
        margin: 0;
    }

    .metric-cards-container {
        display: flex;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .metric-card {
        background-color: #36393f;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        width: 300px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .metric-card:hover {
            background-color: #4a4d57;
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
        }

        .metric-card h3 {
            color: #fff;
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .metric-card p {
            color: #aaa;
            margin: 0;
            font-size: 1rem;
        }

    .dashboard-cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .card {
        background-color: #36393f;
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .card-img-top {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }

    .card-body {
        padding: 1.25rem;
    }

    .card-title {
        color: #fff;
        margin-bottom: 0.5rem;
    }

    .card-text {
        color: #aaa;
        margin-bottom: 0.5rem;
    }

    /* Updated chart container styling with hover effect */
    .chart-container {
        background-color: #36393f;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .chart-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
        }

    /* Custom button styling for the report button */
    .btn-report-download {
        background-color: #5bc0de;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .btn-report-download:hover {
            background-color: #46b8da;
            color: #fff;
            box-shadow: 0 4px 8px rgba(91, 192, 222, 0.3);
            transform: scale(1.05);
            text-decoration: none;
        }
</style>

<div class="dashboard-content-wrapper">
    <div class="dashboard-header-with-button">
        <div class="dashboard-header">
            <h2>Hello @Model.UserName!</h2>
            <p class="lead text-white-50">Welcome back and explore the world.</p>
        </div>
        <a asp-controller="Dashboard" asp-action="DownloadReport" class="btn btn-report-download">Download Report</a>
    </div>

    <div class="metric-cards-container">
        <div class="metric-card">
            <h3>@Model.TotalUsers</h3>
            <p>Registered Users</p>
        </div>
        <div class="metric-card">
            <h3>@Model.TotalBookings</h3>
            <p>Total Bookings</p>
        </div>
        <div class="metric-card">
            <h3>@Model.TotalPackages</h3>
            <p>Total Packages</p>
        </div>
    </div>

    <h3 class="mt-4">Trending Packages</h3>
    <div class="dashboard-cards-container">
        @foreach (var package in Model.TrendingPackages)
        {
            <div class="card">
                <img src="@Url.Content(package.ImagePaths?.FirstOrDefault())" class="card-img-top" alt="@package.Title" style="height: 150px; object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">@package.Title</h5>
                    <p class="card-text">@package.Destination</p>
                </div>
            </div>
        }
    </div>

    <h3 class="mt-4">Bookings Overview (Monthly)</h3>
    <div class="chart-container mb-4">
        <canvas id="bookingsChart"></canvas>
    </div>

    <h3 class="mt-4">Revenue Growth (Monthly)</h3>
    <div class="chart-container">
        <canvas id="revenueChart"></canvas>
    </div>

</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        $(document).ready(function () {
            const bookingsData = @Html.Raw(Json.Serialize(Model.BookingsByMonth));
            const bookingsLabels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            const bookingsValues = bookingsLabels.map((_, index) => bookingsData[index + 1] || 0);

            const bookingsCtx = document.getElementById('bookingsChart');
            new Chart(bookingsCtx, {
                type: 'line',
                data: {
                    labels: bookingsLabels,
                    datasets: [{
                        label: 'Bookings',
                        data: bookingsValues,
                        backgroundColor: 'rgba(255, 193, 7, 0.2)',
                        borderColor: 'rgba(255, 193, 7, 1)',
                        borderWidth: 1,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: 'rgba(255, 193, 7, 1)',
                        pointBorderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleColor: '#fff',
                            bodyColor: '#fff',
                            borderColor: 'rgba(255, 193, 7, 1)',
                            borderWidth: 1,
                            cornerRadius: 5
                        }
                    },
                    scales: {
                        x: {
                            grid: { color: 'rgba(255, 255, 255, 0.1)' },
                            ticks: { color: '#fff' }
                        },
                        y: {
                            beginAtZero: true,
                            grid: { color: 'rgba(255, 255, 255, 0.1)' },
                            ticks: { color: '#fff' }
                        }
                    },
                    hover: {
                        mode: 'index',
                        intersect: false
                    },
                    elements: {
                        point: {
                            radius: 3,
                            pointHoverRadius: 7,
                            pointHoverBorderWidth: 2
                        }
                    }
                }
            });

            const revenueLabels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            const revenueValues = [2000, 3500, 4200, 4800, 5500, 6000, 5800, 6200, 7100, 7500, 8000, 8500];

            const revenueCtx = document.getElementById('revenueChart');
            new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenue',
                        data: revenueValues,
                        backgroundColor: 'rgba(25, 135, 84, 0.2)',
                        borderColor: 'rgba(25, 135, 84, 1)',
                        borderWidth: 2,
                        tension: 0.4,
                        pointBackgroundColor: 'rgba(25, 135, 84, 1)',
                        pointBorderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleColor: '#fff',
                            bodyColor: '#fff',
                            borderColor: 'rgba(25, 135, 84, 1)',
                            borderWidth: 1,
                            cornerRadius: 5
                        }
                    },
                    scales: {
                        x: {
                            grid: { color: 'rgba(255, 255, 255, 0.1)' },
                            ticks: { color: '#fff' }
                        },
                        y: {
                            beginAtZero: true,
                            grid: { color: 'rgba(255, 255, 255, 0.1)' },
                            ticks: { color: '#fff' }
                        }
                    },
                    hover: {
                        mode: 'index',
                        intersect: false
                    },
                    elements: {
                        point: {
                            radius: 3,
                            pointHoverRadius: 7,
                            pointHoverBorderWidth: 2
                        }
                    }
                }
            });
        });
    </script>
}