@model TourismManagement.Models.ViewModels.BookingListViewModel

@{
    ViewData["Title"] = "Manage Bookings";
}

<style>
    body {
        background-color: #f4f7fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-header h2 {
        font-size: 2.5rem;
        font-weight: 700;
        color: #1a253c;
    }

    /* Card Styling */
    .card-style {
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #343a40;
    }

    /* Form & Table Styling */
    .form-control, .form-select {
        border-radius: 8px;
        background-color: #f8f9fa;
        border-color: #dee2e6;
    }

        .form-control:focus, .form-select:focus {
            background-color: #fff;
            border-color: #5D5FEF;
            box-shadow: 0 0 0 3px rgba(93, 95, 239, 0.25);
        }

    .form-label {
        font-weight: 500;
        color: #495057;
    }

    .btn-primary {
        background-color: #5D5FEF;
        border-color: #5D5FEF;
    }

        .btn-primary:hover {
            background-color: #4a4cc7;
            border-color: #4a4cc7;
        }

    /* Bookings List */
    .booking-list-header, .booking-item {
        display: grid;
        grid-template-columns: 2fr 2fr 1fr 1fr 1fr 1fr 1fr 1fr;
        align-items: center;
        gap: 1rem;
    }

    .booking-list-header {
        padding: 0 1.5rem;
        margin-bottom: 1rem;
        color: #6c757d;
        font-weight: 600;
        font-size: 0.8rem;
        text-transform: uppercase;
    }

    .booking-item {
        background-color: #fff;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        border: 1px solid #e9ecef;
        margin-bottom: 1rem;
        transition: box-shadow 0.3s ease;
    }

        .booking-item:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

    .booking-detail {
        font-size: 0.95rem;
        color: #495057;
    }

        .booking-detail.user-email, .booking-detail.package-title {
            font-weight: 500;
            color: #212529;
        }

    .badge {
        padding: 0.4em 0.8em;
        font-size: 0.8rem;
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .booking-list-header {
            display: none;
        }

        .booking-item {
            grid-template-columns: 1fr;
            gap: 0.75rem;
        }

        .booking-detail::before {
            content: attr(data-label);
            font-weight: 600;
            color: #6c757d;
            display: block;
            margin-bottom: 0.25rem;
            font-size: 0.75rem;
            text-transform: uppercase;
        }
    }
</style>

<div class="container-fluid mt-4">
    <div class="page-header mb-4">
        <h2>@ViewData["Title"]</h2>
    </div>

    <div class="card-style filter-card">
        <h5 class="card-title">Filter Bookings</h5>
        <form method="get" class="row g-3 align-items-end">
            <div class="col-xl-2 col-lg-4 col-md-6">
                <label class="form-label">Status</label>
                <select name="status" class="form-select">
                    <option value="">All</option>
                    <option value="Booked" selected="@(Model.Status == "Booked")">Booked</option>
                    <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                </select>
            </div>
            <div class="col-xl-3 col-lg-4 col-md-6">
                <label class="form-label">User Email</label>
                <input type="text" name="userEmail" value="@Model.UserEmail" class="form-control" placeholder="Search email" />
            </div>
            <div class="col-xl-3 col-lg-4 col-md-6">
                <label class="form-label">Package</label>
                <select name="packageId" class="form-select">
                    <option value="">All Packages</option>
                    @foreach (var package in Model.Packages ?? Enumerable.Empty<TourismManagement.Models.Package>())
                    {
                        <option value="@package.Id" selected="@(Model.PackageId == package.Id)">@package.Title</option>
                    }
                </select>
            </div>
            <div class="col-xl-2 col-lg-6 col-md-6">
                <label class="form-label">Sort by</label>
                <select name="sortOrder" class="form-select">
                    <option value="date_desc" selected="@(Model.SortOrder == "date_desc")">Booking Date ↓</option>
                    <option value="date_asc" selected="@(Model.SortOrder == "date_asc")">Booking Date ↑</option>
                    <option value="amount_desc" selected="@(Model.SortOrder == "amount_desc")">Amount ↓</option>
                    <option value="amount_asc" selected="@(Model.SortOrder == "amount_asc")">Amount ↑</option>
                </select>
            </div>
            <div class="col-xl-2 col-lg-6 col-md-12">
                <button type="submit" class="btn btn-primary w-100">Filter</button>
                <a asp-action="Index" class="btn btn-secondary w-100 mt-2">Reset</a>
            </div>
        </form>
    </div>

    <div class="card-style bookings-list-card">
        <div class="booking-list-header">
            <div>User</div>
            <div>Package</div>
            <div>Travel Date</div>
            <div>Booking Date</div>
            <div>People</div>
            <div>Total</div>
            <div>Status</div>
            <div class="text-center">Actions</div>
        </div>

        <div class="booking-list">
            @foreach (var booking in Model.Bookings)
            {
                <div class="booking-item">
                    <div class="booking-detail user-email" data-label="User">@booking.User.Email</div>
                    <div class="booking-detail package-title" data-label="Package">@booking.Package.Title</div>
                    <div class="booking-detail" data-label="Travel Date">@booking.TravelDate.ToString("yyyy-MM-dd")</div>
                    <div class="booking-detail" data-label="Booking Date">@booking.BookingDate.ToString("yyyy-MM-dd HH:mm")</div>
                    <div class="booking-detail" data-label="People">@booking.NumPeople</div>
                    <div class="booking-detail" data-label="Total">@booking.TotalAmount.ToString("C")</div>
                    <div class="booking-detail" data-label="Status">
                        @if (booking.Status == "Cancelled")
                        {
                            <span class="badge rounded-pill bg-danger">Cancelled</span>
                        }
                        else
                        {
                            <span class="badge rounded-pill bg-success">Booked</span>
                        }
                    </div>
                    <div class="booking-detail text-center" data-label="Actions">
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">Actions</button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" asp-action="BookingDetails" asp-route-id="@booking.Id">View</a></li>
                                <li><a class="dropdown-item" asp-action="EditBooking" asp-route-id="@booking.Id">Edit</a></li>
                                @if (booking.Status == "Booked" && booking.TravelDate > DateTime.Now)
                                {
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <button type="button" class="dropdown-item text-danger"
                                                data-bs-toggle="modal" data-bs-target="#cancelModal"
                                                data-bookingid="@booking.Id"
                                                data-packagetitle="@booking.Package.Title"
                                                data-traveldate="@booking.TravelDate.ToString("yyyy-MM-dd")">
                                            Cancel
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form asp-action="CancelBooking" method="post">
            <input type="hidden" name="id" id="bookingId" />
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="cancelModalLabel">Confirm Cancellation</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to cancel the booking for:</p>
                    <ul>
                        <li><strong>Package:</strong> <span id="packageTitle"></span></li>
                        <li><strong>Travel Date:</strong> <span id="travelDate"></span></li>
                    </ul>
                    <p class="text-danger fw-bold">This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">No, Keep It</button>
                    <button type="submit" class="btn btn-danger">Yes, Cancel Booking</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const cancelModal = document.getElementById('cancelModal');
        cancelModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const bookingId = button.getAttribute('data-bookingid');
            const packageTitle = button.getAttribute('data-packagetitle');
            const travelDate = button.getAttribute('data-traveldate');

            document.getElementById('bookingId').value = bookingId;
            document.getElementById('packageTitle').textContent = packageTitle;
            document.getElementById('travelDate').textContent = travelDate;
        });
    </script>
}