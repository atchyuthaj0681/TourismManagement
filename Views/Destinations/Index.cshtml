@model IEnumerable<TourismManagement.Models.Destination>

@{
    ViewData["Title"] = "Destinations";
}

<h1>Destinations</h1>

<form method="get" asp-action="Index" class="form-inline mb-3">
    <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." class="form-control mr-2" />
    <select name="category" class="form-control mr-2">
        <option value="">All Categories</option>
        <!-- Add categories here, or pass ViewBag.Categories -->
        <option value="Beach" selected="@(ViewBag.Category == "Beach" ? "selected" : null)">Beach</option>
        <option value="Mountain" selected="@(ViewBag.Category == "Mountain" ? "selected" : null)">Mountain</option>
        <option value="City" selected="@(ViewBag.Category == "City" ? "selected" : null)">City</option>

    </select>
    <select name="sortOrder" class="form-control mr-2">
        <option value="">Sort by Name (Asc)</option>
        <option value="name_desc" selected="@(ViewBag.SortOrder == "name_desc" ? "selected" : null)">Sort by Name (Desc)</option>
        <option value="price_asc" selected="@(ViewBag.SortOrder == "price_asc" ? "selected" : null)">Sort by Price (Asc)</option>
        <option value="price_desc" selected="@(ViewBag.SortOrder == "price_desc" ? "selected" : null)">Sort by Price (Desc)</option>

    </select>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Category</th>
            <th>Description</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var dest in Model)
{
    <tr>
        <td>@dest.Name</td>
        <td>@dest.Category</td>
        <td>@(dest.Description?.Length > 100 ? dest.Description.Substring(0, 100) + "..." : dest.Description)</td>
        <td>@dest.Price.ToString("C")</td>
        <td>
            <a asp-action="Details" asp-route-id="@dest.Id" class="btn btn-info btn-sm">Details</a>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Edit" asp-route-id="@dest.Id" class="btn btn-warning btn-sm">Edit</a>
            }
        </td>
    </tr>
}
    </tbody>
</table>

<nav>
    <ul class="pagination">
        @{
            var totalPages = (int)Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize);
            var currentPage = (int)ViewBag.PageNumber;
        }
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)" asp-route-pageSize="@ViewBag.PageSize" asp-route-search="@ViewBag.Search" asp-route-category="@ViewBag.Category" asp-route-sortOrder="@ViewBag.SortOrder">Previous</a>
            </li>
        }
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize" asp-route-search="@ViewBag.Search" asp-route-category="@ViewBag.Category" asp-route-sortOrder="@ViewBag.SortOrder">@i</a>
            </li>
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)" asp-route-pageSize="@ViewBag.PageSize" asp-route-search="@ViewBag.Search" asp-route-category="@ViewBag.Category" asp-route-sortOrder="@ViewBag.SortOrder">Next</a>
            </li>
        }
    </ul>
</nav>

@if (User.IsInRole("Admin"))
{
    <a asp-action="Create" class="btn btn-success">Add New Destination</a>
}
